1. word vs keyword 
2. var let const
3. Hoisting -->> variables ko banane se phle use use kr skte hai 

undefined and Not-defined 

undefined -- koi cheej exit kr rhi hai pr uski value pta nhi hai 
Not-defined -- kuch v jo exit hi nhi kr rha ho  


4. Types in js 
a. primitive 
b. reference-->>aisi koi v value jisko  copy krne pr real copy nhi hota balki uss main value ka reference pass ho jata hai use hum reference value kehte hai , aur jisko copy krne pe real value copy ho jaye wo primitive type hoti hai 

primitive -- >> koi v value jisme koi brackets na ho wo primitive type hoti hai

reference -->> aisi value jisme brackets ho wo reference hoti hai 


5. push, pop , shift , unshift 

push--> array me value add krne k iiye use krte hai last se 

pop -->> array se value/element nikalne k liye use krte hai last se 

unshift -->> array ke starting me value add krne liye iska use krte hai 

shift -->> array se value nikalne k liye use krte hai shuru se 


agar bich se hatana hai to we use array.splice(3, 1)

here 3 is jis index se value hatani hai and 1 is kaha tak hatani hai 



object -->> object is like ek bande ki saari property




PART 2

var , let , const 

diffrence between var vs let , const 

var -- >> var is function scoped it means hum jo v hum variable declare krenge usko kahi v uss function me use kr skte hai 
and also var apne parent function me kahi v use ho skta hai 
var old js me tha 
var itself to the window object

let new js me hai
let -->> let const braces scoped hot hai 
let const doesn't add itself to window object


execution context --

execution context is like a dabba ..jo ki har baar banta hai jab koi function call hota hai aur uss dabbe me (execution context) me teen cheeje hoti hai 
1. variables 
2. functions 
3. lexical environment

lexical environment ek chart type hota hai jisme ye likha hota hai ki apka perticular function kin kin cheejo ko access kar skta hai mtlb it holds it's scope and scope chain 

how to copy reference values?

-->> By using spread operator [...]


js me kuch v likho wo mainly do prakar me se kisi ek prakar ko belong krti hai 
i.e falsy or truthy 

falsy value ye hai -->> 0 false undefined null NaN(not a number) document.all

falsy ko chord k jitne v hai wo truthy honge 


callback function
-->> aisa code jo baad me chalta hai use hum ek function de dete hai ke bhaiya jab complete ho jana to ye function chala dena, aur wo function jo hum dete hai wo ek normal function hi hota hai aur kehte hai callback function  




FIRST CLASS FUNCTIONS

js me ek concept hota hai jiska matlab hota hai ki ap function ko use kr skte hai as a value

var a = 23;
var a = 2;

var a = {};
var a = [];
var a = true;

similarly we can,

var a = function(){}; 


how arrays are made behind the scenes?

var a = [2,3,4,5,4];

but behind the scene it stored in the form 

a = {
    0: 2,
    1: 3,
    2: 4,
    3: 5,
    4: 4
}
mtlb ki ye object k form me values store krta hai 

[], {} -->> dono object hi hai

To check array is array or not 

console me jake ye likho

Array.isArray([])
-->> true

Array.isArray({})
-->>> false


koi v attribute hatana hai kisi v object ka 

then we use delete a.age(); isse a object ka age attribute hat jayega uss object se 





















